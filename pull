#! /bin/sh

set -e

case "$1" in

	-h|--help)

		echo "${0##*/}: Pull an image from DockerHub into a directory."
		echo "Usage: pull <directory> <image>"
		exit

	;;

esac

_e () { printf %b "${0##*/}: \e[31mError:\e[0m $@\n" >&2; exit 1; }


# -- Args: repository, tag, token.

_get_manifest () {
	curl -f -s \
		-H "Authorization: Bearer $3" \
		-H "Accept: application/vnd.docker.distribution.manifest.v2+json" \
		https://index.docker.io/v2/$1/manifests/$2
}


# -- Args: digest, repository, token.

_pull_layer () {
	echo "Downloading $1."
	curl -f -# -OL \
		-H "Authorization: Bearer $3" \
		-H "Accept: application/vnd.docker.image.rootfs.diff.tar.gzip" \
		https://index.docker.io/v2/$2/blobs/$1
}


# -- Args: repository, token. ==> Reads a manifest from stdin.

_pull_layers () {
	jq -r .layers[].digest | while read d; do _pull_layer $d $1 $2; done
}


# -- Args: dir, repository, tag, token.

_pull () {
	cd $1

	_get_manifest $2 $3 $4 | _pull_layers $2 $4

	for f in *; do
		tar --force-local -xf $f
		rm $f
	done
}


# -- Process the request.

[ $# -eq 2 ] ||
	_e "Wrong number of arguments."

tag="${2##*:}"
img="${2%%:*}"
owner="${img%%/*}"
out="$1"

[ "$img" ] ||
	_e "No image provided."

[ -d "$out" ] ||
	_e "'$out' is not a directory."

[ -z "$tag" -o "$tag" = "$img" ] && tag=latest
[ -z "$owner" -o "$owner" = "$img" ] && img="library/$img"

echo "Trying to pull $img:$tag"

while [ ! "$token" ]; do
	token=$(curl -sf "https://auth.docker.io/token?service=registry.docker.io&scope=repository:$img:pull" | jq -r .token)
done

_pull $out $img $tag $token
