#! /bin/sh

set -e

case "$1" in

	-h|--help)

		echo "${0##*/}: Run commands or script in a chroot."
		echo "Usage: ${0##*/} [-h|--help] <directory> <command|-s shell script> [command arguments]"
		exit

	;;

esac

_e () { echo -e "${0##*/}: \e[31mError:\e[0m $@" >&2; exit 1; }


#   Helper functions.

clean () {

	#   Clean the system mountpoints.

	umount -f -R $_chroot_dir

}


#   Handle the arguments.

[ $# -lt 2 ] &&
	_e "Too few arguments."

[ -d "$1" ] ||
	_e "'$1' is not a directory."

_chroot_dir="$1"
shift


#   Clean the chroot directory on exit.

trap clean EXIT HUP INT TERM


#   Create the FHS mount points for the chroot.

mkdir -p \
	$_chroot_dir/proc \
	$_chroot_dir/sys \
	$_chroot_dir/dev \
	$_chroot_dir/run \
	$_chroot_dir/tmp

mount --bind $_chroot_dir $_chroot_dir
mount -t proc -o nosuid,noexec,nodev - $_chroot_dir/proc
mount -t sysfs -o nosuid,noexec,nodev,ro - $_chroot_dir/sys
mount -t devtmpfs -o mode=0755,nosuid - $_chroot_dir/dev
mount -t devpts -o mode=0620,gid=5,nosuid,noexec - $_chroot_dir/dev/pts
mount -t tmpfs -t tmpfs -o mode=1777,nosuid,nodev - $_chroot_dir/dev/shm
mount -t tmpfs -o mode=1777,strictatime,nodev,nosuid - $_chroot_dir/tmp
mount --bind /run $_chroot_dir/run


#   Allow network access.

mkdir -p $_chroot_dir/etc

for f in \
	/etc/hosts \
	/etc/host.conf \
	/etc/nsswitch.conf \
	/etc/resolv.conf
do
	[ -f $f ] && {
		> $_chroot_dir/$f
		mount --bind $f $_chroot_dir/$f
	}
done


#   Run the command in the chroot.

SHELL=/bin/sh exec unshare --fork --pid chroot $_chroot_dir "$@"
