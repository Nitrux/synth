#! /bin/sh


set -e

#   Helper functions.

_e () { echo -e "${0##*/}: \e[31mError:\e[0m $@" >&2; exit 1; }

clean () {

	#   Clean the created mount points.

	umount -f -R $_chroot_dir

}

_mount () {

	test -e "$1" ||
		_e "'$1' does not exist."

	mkdir -p ${2%/*}

	test -f "$1" && > ${2%/*}
	test -d "$1" && mkdir -p "$2"

	mount --bind "$1" "$2"

}


#   Clean the chroot directory on exit.

trap clean EXIT HUP INT TERM


#   Create the FHS mount points for the chroot.

mkdir -p \
	$_chroot_dir/proc \
	$_chroot_dir/sys \
	$_chroot_dir/dev \
	$_chroot_dir/run \
	$_chroot_dir/tmp

mount --bind $_chroot_dir $_chroot_dir
mount -t proc -o nosuid,noexec,nodev - $_chroot_dir/proc
mount -t sysfs -o nosuid,noexec,nodev,ro - $_chroot_dir/sys
mount -t devtmpfs -o mode=0755,nosuid - $_chroot_dir/dev
mount -t devpts -o mode=0620,gid=5,nosuid,noexec - $_chroot_dir/dev/pts
mount -t tmpfs -t tmpfs -o mode=1777,nosuid,nodev - $_chroot_dir/dev/shm
mount -t tmpfs -o mode=1777,strictatime,nodev,nosuid - $_chroot_dir/tmp
mount --bind /run $_chroot_dir/run


#   Allow network access.

mkdir -p $_chroot_dir/etc

for f in \
	/etc/hosts \
	/etc/host.conf \
	/etc/nsswitch.conf \
	/etc/resolv.conf
do
	test -f $f && {
		> $_chroot_dir/$f
		mount --bind $f $_chroot_dir/$f
	}
done


#	Parse the command line.

while :; do

	case "$1" in

		#	Mount points are given in the format: <src>:<mnt>

		-m)
			_mount "${2##*:}" $_chroot_dir/"${2%%:/*}"
			shift 2
		;;

		-u)
			_user_spec="--userspec=$2"
			shift 2
		;;

		-d|--debug)
			set -x
			shift
		;;

		-h|--help)
			echo "${0##*/}: Run commands in a preconfigured chroot."
			echo "Usage: ${0##*/} [-h|--help] <directory> <command> [command arguments]"
			exit
		;;

		-*) _e "Unknown option '$1'.";;

		*) break;;

	esac

done


#   Check the command line.

test $# -lt 2 &&
	_e "Too few arguments."

test -d "$1" ||
	_e "'$1' is not a directory."

_chroot_dir="$1"
shift


#   Run the command in the chroot.

SHELL=/bin/sh exec unshare --fork --pid chroot $_user_spec $_chroot_dir "$@"
